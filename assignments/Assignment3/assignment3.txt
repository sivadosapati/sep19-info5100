Note:
1.Complete All Questions
2.Deadline : 30th September 2019, 12:00pm

Q1. Write a Java class named 'Course'
It should have following members
courseId
courseName
maxCapacity
professorId
credits
int[] studentIds

Function: registerStudent(int studentId)

There should be 3 ways to create Course Object (Hint : Use Constructor)
courseId
courseId, professorId
courseId, professorId, credits

Class should provide getters/setters for all members
registerStudent method should store all ids in studentIds array.

-----------------------------------------------------------------------------------------------------------------------

Q2. In the above example, add following validations to setters/constructors
courseId - should not be negative or 0
courseName- should be a string with minimum length 10 and maximum 60
maxCapacity - should not be less than 10 greater than 100
professorId - should be a six digit integer
credits - should be a single digit but greater than 0

-----------------------------------------------------------------------------------------------------------------------

Q3. Add a function called removeDuplicates in Course class
This function should be called if course has reached the maximum capacity and
remove all duplicate student Ids and return the new ids

Ex: Input :[1,6,2,3,2,4,5,6]
Output: [1,6,2,3,4,5]

public int[] removeDuplicates(int[] studentIds) {
}

-----------------------------------------------------------------------------------------------------------------------

Q4. Implement the following method in Course class.

public int groupsOfStudents(int[] studentIds) {

}

The above method takes an array of studentIds as an argument. Find number of pairs of studentsIds whose sum is even
Example:
Input : [1,2,3,4,5,6]
Output : 6
Explanation: (1 + 3), (1 + 5), (3 + 5), (2 + 4), (2 + 6), (4 + 6)

-----------------------------------------------------------------------------------------------------------------------

Q5.
The count-and-say sequence is a sequence of integers with the first five terms as following:
1.     1
2.     11
3.     21
4.     1211
5.     111221

1 is read off as "one 1" or 11.
11 is read off as "two 1s" or 21.
21 is read off as "one 2, then one 1" or 1211.
Given an integer n where 1 ≤ n ≤ 30, generate the nth term of the count-and-say sequence.
Note: Each term of the sequence of integers will be represented as a string.

Example 1:
Input: 1
Output: "1"

Example 2:
Input: 4
Output: "1211"
public String countAndSay(int n) {

}

-----------------------------------------------------------------------------------------------------------------------

Q6. Given an input string , reverse the string word by word.
Example:
Input : “the sky is blue”
Output : “blue is sky the”
Assumptions:
A word is defined as a sequence of non-space characters.
The input string does not contain leading or trailing spaces.
The words are always separated by a single space.

-----------------------------------------------------------------------------------------------------------------------


Q7.
Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.
Example 1:
Input:
[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]
Output: [1,2,3,6,9,8,7,4,5]

Example 2:
Input:
[
  [1, 2, 3, 4],
  [5, 6, 7, 8],
  [9,10,11,12]
]
Output: [1,2,3,4,8,12,11,10,9,5,6,7]

public int[] spiralOrder(int[][] matrix) {
}

-----------------------------------------------------------------------------------------------------------------------

Q8.
The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this
P   A   H   N
A P L S I I G
Y   I   R
And then read line by line: "PAHNAPLSIIGYIR"
Write the code that will take a string and make this conversion given a number of rows:
String convert(string s, int numRows);
Example 1:
Input: s = "PAYPALISHIRING", numRows = 3
Output: "PAHNAPLSIIGYIR"

Example 2:
Input: s = "PAYPALISHIRING", numRows = 4
Output: "PINALSIGYAHRPI"
Explanation:

P     I    N
A   L S  I G
Y A   H R
P     I

-----------------------------------------------------------------------------------------------------------------------

Q9. Explain Encapsulation with an example. (Write at least 30-40 words).

-----------------------------------------------------------------------------------------------------------------------

Q10. What is the difference between Encapsulation and Abstraction


